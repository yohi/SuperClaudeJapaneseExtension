{
  "version": "1.0.0",
  "commands": {
    "build": {
      "description": "インテリジェントなエラーハンドリングと最適化によるプロジェクトのビルド、コンパイル、パッケージング",
      "category": "開発・デプロイ",
      "arguments": {
        "target": "ビルド対象を指定（例: production, development, staging）"
      },
      "options": {
        "--type": "ビルドタイプを指定（dev/prod/test）",
        "--clean": "ビルド前にクリーンアップを実行",
        "--optimize": "ビルド成果物を最適化",
        "--verbose": "最大限の詳細と説明を表示"
      }
    },
    "implement": {
      "description": "インテリジェントなペルソナ活性化とMCP統合による機能とコード実装",
      "category": "開発・実装",
      "arguments": {
        "feature-description": "実装する機能の説明を指定"
      },
      "options": {
        "--type": "実装タイプを指定（component/api/service/feature）",
        "--framework": "フレームワークを指定（react/vue/express）",
        "--safe": "安全モードで実行（保守的な実装）",
        "--with-tests": "テストコードを含めて実装"
      }
    },
    "analyze": {
      "description": "コード品質、セキュリティ、パフォーマンス、アーキテクチャの包括的分析",
      "category": "分析・調査",
      "arguments": {
        "target": "分析対象を指定（ファイル、ディレクトリ、またはコード領域）"
      },
      "options": {
        "--scope": "分析スコープレベル指定（file/module/project/system）",
        "--focus": "焦点領域指定（performance/security/quality/architecture）",
        "--think": "多ファイル分析（約4Kトークン）",
        "--think-hard": "深層アーキテクチャ分析（約10Kトークン）"
      }
    },
    "troubleshoot": {
      "description": "コード、ビルド、デプロイメント、システム動作における問題の診断と解決",
      "category": "分析・調査",
      "arguments": {
        "symptoms": "発生している症状や問題を記述"
      }
    },
    "explain": {
      "description": "教育的明確さによるコード、概念、システム動作の分かりやすい説明",
      "category": "分析・調査",
      "arguments": {
        "topic": "説明が必要なトピックを指定"
      }
    },
    "improve": {
      "description": "コード品質、パフォーマンス、保守性への体系的改善適用",
      "category": "品質・強化",
      "arguments": {
        "target": "改善対象を指定（ファイル、関数、モジュールなど）"
      }
    },
    "cleanup": {
      "description": "コードの体系的クリーンアップ、デッドコード削除、プロジェクト構造の最適化",
      "category": "品質・強化",
      "arguments": {
        "target": "クリーンアップ対象を指定"
      }
    },
    "document": {
      "description": "コンポーネント、関数、API、機能に特化したドキュメント生成",
      "category": "ドキュメント",
      "arguments": {
        "target": "ドキュメント化する対象を指定"
      }
    },
    "estimate": {
      "description": "インテリジェント分析によるタスク、機能、プロジェクトの開発見積もり提供",
      "category": "プランニング",
      "arguments": {
        "target": "見積もり対象のタスクや機能を指定"
      }
    },
    "task": {
      "description": "インテリジェントなワークフロー管理と委譲による複雑タスクの実行",
      "category": "プランニング",
      "arguments": {
        "operation": "実行する操作（例: create, update, list, complete）"
      }
    },
    "test": {
      "description": "カバレッジ分析と自動化された品質レポートによるテスト実行",
      "category": "テスト",
      "arguments": {
        "type": "テストタイプを指定（例: unit, integration, e2e）"
      },
      "options": {
        "--play": "Playwrightでクロスブラウザ自動化とE2Eテストを実行",
        "--coverage": "コードカバレッジレポートを生成",
        "--watch": "ファイル変更を監視して自動再実行"
      }
    },
    "git": {
      "description": "インテリジェントなコミットメッセージとワークフロー最適化によるGit操作",
      "category": "バージョン管理",
      "arguments": {
        "operation": "Git操作を指定（例: commit, push, pull, branch）"
      }
    },
    "design": {
      "description": "包括的な仕様によるシステムアーキテクチャ、API、コンポーネントインターフェースの設計",
      "category": "開発・実装",
      "arguments": {
        "domain": "設計ドメインを指定（例: api, database, ui）"
      }
    },
    "index": {
      "description": "インテリジェントな組織化による包括的プロジェクトドキュメントとナレッジベースの生成",
      "category": "メタ",
      "arguments": {
        "query": "検索クエリを指定（オプション）"
      }
    },
    "load": {
      "description": "Serena MCP統合によるプロジェクトコンテキスト読み込みのためのセッションライフサイクル管理",
      "category": "メタ",
      "arguments": {
        "path": "読み込むプロジェクトのパスを指定"
      }
    },
    "spawn": {
      "description": "インテリジェントな分解と委譲によるメタシステムタスクオーケストレーション",
      "category": "メタ",
      "arguments": {
        "mode": "実行モードを指定（例: parallel, sequential）"
      }
    },
    "help": {
      "description": "利用可能な全ての /sc コマンドとその機能の一覧表示",
      "category": "メタ"
    },
    "brainstorm": {
      "description": "ソクラテス式対話と体系的探索による対話的要件発見",
      "category": "プランニング"
    },
    "reflect": {
      "description": "Serena MCP分析機能を使用したタスクの振り返りと検証",
      "category": "メタ"
    },
    "save": {
      "description": "Serena MCP統合によるセッションコンテキスト永続化のためのセッションライフサイクル管理",
      "category": "メタ"
    },
    "select-tool": {
      "description": "複雑度スコアリングと操作分析に基づくインテリジェントなMCPツール選択",
      "category": "メタ"
    },
    "spec-panel": {
      "description": "著名な仕様およびソフトウェアエンジニアリング専門家による複数エキスパート仕様レビューと改善",
      "category": "品質・強化"
    },
    "workflow": {
      "description": "PRDと機能要件から構造化された実装ワークフローの生成",
      "category": "プランニング"
    },
    "business-panel": {
      "description": "適応型対話モードを備えた複数エキスパートによるビジネス分析",
      "category": "分析・調査"
    },
    "spec-tasks": {
      "description": "仕様の実装タスクを生成",
      "category": "kiro",
      "arguments": {
        "feature-name": "機能名",
        "auto-approve": "自動承認フラグ（-y）"
      }
    },
    "steering": {
      "description": "プロジェクト状態に基づいてKiroステアリングドキュメントをインテリジェントに作成または更新",
      "category": "kiro"
    },
    "spec-requirements": {
      "description": "仕様の包括的な要件を生成",
      "category": "kiro",
      "arguments": {
        "feature-name": "機能名"
      }
    },
    "spec-status": {
      "description": "仕様のステータスと進捗を表示",
      "category": "kiro",
      "arguments": {
        "feature-name": "機能名"
      }
    },
    "validate-gap": {
      "description": "要件と既存コードベース間の実装ギャップを分析",
      "category": "kiro",
      "arguments": {
        "feature-name": "機能名"
      }
    },
    "steering-custom": {
      "description": "特化したプロジェクトコンテキスト用のカスタムKiroステアリングドキュメントを作成",
      "category": "kiro"
    },
    "validate-design": {
      "description": "対話型技術設計品質レビューと検証",
      "category": "kiro",
      "arguments": {
        "feature-name": "機能名"
      }
    },
    "spec-design": {
      "description": "仕様の包括的な技術設計を作成",
      "category": "kiro",
      "arguments": {
        "feature-name": "機能名",
        "auto-approve": "自動承認フラグ（-y）"
      }
    },
    "spec-init": {
      "description": "詳細なプロジェクト説明と要件で新しい仕様を初期化",
      "category": "kiro",
      "arguments": {
        "project-description": "プロジェクト説明"
      }
    },
    "spec-impl": {
      "description": "TDD手法を使用した仕様タスクの実行",
      "category": "kiro",
      "arguments": {
        "feature-name": "機能名",
        "task-numbers": "タスク番号（オプション）"
      }
    }
  }
}
